(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{66:function(t,r,e){"use strict";e.r(r);var i=e(0),a=Object(i.a)({},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("div",{staticClass:"content"},[t._m(0),t._m(1),t._m(2),t._m(3),e("ul",[e("li",[e("router-link",{attrs:{to:"BigO/"}},[t._v("大O表示法")]),t._v("-复杂度的常用表示法")],1)]),t._m(4),t._m(5),e("ul",[e("li",[e("router-link",{attrs:{to:"Stack/"}},[t._v("栈")]),t._v("－后进先出！")],1),e("li",[e("router-link",{attrs:{to:"Queue/"}},[t._v("队列")]),t._v("－先进先出！")],1),e("li",[e("router-link",{attrs:{to:"Deque/"}},[t._v("双端队列")]),t._v("-两端都可以进出")],1),e("li",[e("router-link",{attrs:{to:"PriorityQueue/"}},[t._v("优先队列")]),t._v("－一个保持最重要的元素总是在最前面的队列。")],1)]),t._m(6),e("ul",[e("li",[e("router-link",{attrs:{to:"LinkedList/"}},[t._v("链表")]),t._v("- 链接起来的数据序列,先进后出")],1)]),t._m(7),e("ul",[e("li",[e("router-link",{attrs:{to:"Tree/"}},[t._v("树")]),t._v("-通用的树形结构")],1),e("li",[e("router-link",{attrs:{to:"BinarySearchTree/"}},[t._v("二叉树")]),t._v("-二叉树")],1)]),t._m(8),t._m(9),t._m(10),e("ul",[e("li",[e("router-link",{attrs:{to:"Graph/"}},[t._v("图")]),t._v("-通用的图形数据结构")],1)]),t._m(11),e("ul",[e("li",[e("router-link",{attrs:{to:"BubbleSort/"}},[t._v("冒泡排序")]),t._v("-性能最差的排序方法")],1),e("li",[e("router-link",{attrs:{to:"InsertionSort/"}},[t._v("插入排序")])],1),e("li",[e("router-link",{attrs:{to:"MegreSort/"}},[t._v("归并排序")])],1),e("li",[e("router-link",{attrs:{to:"QuickSort/"}},[t._v("快速排序")])],1)]),t._m(12),e("ul",[t._m(13),e("li",[e("router-link",{attrs:{to:"BinarySearchTree/"}},[t._v("二叉树搜索")])],1),e("li",[e("router-link",{attrs:{to:"BreadthFirstSearch/"}},[t._v("广度优先搜索")])],1),e("li",[e("router-link",{attrs:{to:"DepthFirstSearch/"}},[t._v("深度优先搜索")])],1)])])},[function(){var t=this.$createElement,r=this._self._c||t;return r("h1",{attrs:{id:"基本的算法和数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本的算法和数据结构","aria-hidden":"true"}},[this._v("#")]),this._v(" 基本的算法和数据结构")])},function(){var t=this.$createElement,r=this._self._c||t;return r("blockquote",[r("p",[this._v("注：本文译自 "),r("a",{attrs:{href:"https://github.com/raywenderlich/swift-algorithm-club",target:"_blank",rel:"noopener noreferrer"}},[this._v("Swift Algorithm Club")]),this._v("。")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("p",[this._v("所有的代码都是兼容  "),r("strong",[this._v("Swift 4")]),this._v(" 的。如果 Swift 有更新，我也会及时跟进。")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#复杂度","aria-hidden":"true"}},[this._v("#")]),this._v(" 复杂度")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据结构")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列","aria-hidden":"true"}},[this._v("#")]),this._v(" 队列")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表","aria-hidden":"true"}},[this._v("#")]),this._v(" 链表")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#树","aria-hidden":"true"}},[this._v("#")]),this._v(" 树")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"哈希"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#哈希","aria-hidden":"true"}},[this._v("#")]),this._v(" 哈希")])},function(){var t=this.$createElement,r=this._self._c||t;return r("ul",[r("li",[r("a",{attrs:{href:"HashTable"}},[this._v("哈希")]),this._v("-允许你通过键值对来存取数据。字典通常都是基于哈希表实现的")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图","aria-hidden":"true"}},[this._v("#")]),this._v(" 图")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"排序算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排序算法","aria-hidden":"true"}},[this._v("#")]),this._v(" 排序算法")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"搜索算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#搜索算法","aria-hidden":"true"}},[this._v("#")]),this._v(" 搜索算法")])},function(){var t=this.$createElement,r=this._self._c||t;return r("li",[r("a",{attrs:{href:"BinarySearch"}},[this._v("二分搜索")])])}],!1,null,null,null);r.default=a.exports}}]);