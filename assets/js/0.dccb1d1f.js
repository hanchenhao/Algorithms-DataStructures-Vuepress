(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{57:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#树","aria-hidden":"true"}},[t._v("#")]),t._v(" 树")]),a("p",[t._v("用树这种数据结构表示对象之间的层次关系,其形状像一颗树\n一个树形的数据结构有若干节点,它们互相连接着彼此,节点与其子节点相互关联,通常子节点指向它们的父节点,在树形的数据结构中,节点总是只有一个父节点,而可以有很多歌子节点")]),a("p",[t._v("下面我们用swift来实现一个基本的树形数据结构:")]),a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T    "),a("span",{attrs:{class:"token comment"}},[t._v("//  值")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" parent"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("//  父节点")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" children "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token builtin"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("//  子节点集合")]),t._v("\n    \n    \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("init")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" T"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("self")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("addChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("Void")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        children"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("append")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        node"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),a("p",[t._v("这是一个没有枝叶的树,下面我们给它加一点内容:")]),a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tree "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token builtin"}},[t._v("String")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("init")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"tree"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" leap "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token builtin"}},[t._v("String")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("init")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"leap"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntree"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" leap"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntree"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flower"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),a("p",[t._v("序列化输出:")]),a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("CustomStringConvertible")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" description"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"'),a("span",{attrs:{class:"token interpolation"}},[a("span",{attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("value"),a("span",{attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v('"')]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("children"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("isEmpty")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            s "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{attrs:{class:"token string"}},[t._v('" {"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("  children"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token builtin"}},[t._v("map")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" $"),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("joined")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("separator"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"  ,"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"}"')]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token function"}},[t._v("print")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tree"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),a("p",[t._v("下面我们就看到了一个基本的树的结构:")]),a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[t._v("tree "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("leap  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("flower"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("再给树添加一些枝蔓:")]),a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("_")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" leapChild "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token builtin"}},[t._v("String")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("init")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"leap-child"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    leap"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" leapChild"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("_")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" flowerChild "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("TreeNode")]),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token builtin"}},[t._v("String")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("init")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"flower-child"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    flower"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addChild")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flowerChild"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),a("p",[t._v("最后的输出结果为:")]),a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[t._v("\ntree "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("leap "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("leap"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("flower "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("flower"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("flower"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("flower"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("flower"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("flower"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("flower"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("child"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n")])])])}],!1,null,null,null);s.default=o.exports}}]);